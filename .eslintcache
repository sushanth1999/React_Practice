[{"/home/sushanth/Desktop/cart/src/index.js":"1","/home/sushanth/Desktop/cart/src/App.js":"2","/home/sushanth/Desktop/cart/src/reportWebVitals.js":"3","/home/sushanth/Desktop/cart/src/CartItem.js":"4","/home/sushanth/Desktop/cart/src/Cart.js":"5"},{"size":500,"mtime":1611748464635,"results":"6","hashOfConfig":"7"},{"size":177,"mtime":1612503824710,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1611746289351,"results":"9","hashOfConfig":"7"},{"size":1870,"mtime":1612680988594,"results":"10","hashOfConfig":"7"},{"size":2629,"mtime":1613198626851,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1failtm",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sushanth/Desktop/cart/src/index.js",[],["25","26"],"/home/sushanth/Desktop/cart/src/App.js",["27"],"import CartItem from \"./CartItem\";\nimport Cart from \"./Cart\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Cart></Cart>\n    </div>\n  );\n}\n\nexport default App;\n","/home/sushanth/Desktop/cart/src/reportWebVitals.js",[],"/home/sushanth/Desktop/cart/src/CartItem.js",["28"],"import React from \"react\";\n\nclass CartItem extends React.Component {\n\n   render(){\n       console.log(this.props)\n    //    Object destructuring passing values as State\n      // const {price,title,qty} = this.state\n    //    Object destructuring passing values as Props\n    const {price,title,qty} = this.props.product;\n\n    return(\n           <div className = \"cart-item\">\n               <div className=\"left-block\">\n                   {/* Passig a object for style */}\n                    <img style = {styles.image}></img>\n               </div>\n               <div className = \"right-block\">\n                    <div style = {{fontSize:25}}>{title}</div>\n                    <div style = {{color : \"gray\"}}>Rs {price}</div>\n                    <div style = {{color : \"gray\"}}>Qty : {qty}</div>\n                    <div className=\"cart-item-actions\">\n                      \n                        {/* Buttons */}\n                        <img alt =\"increase\" \n                        className=\"action-icons\" \n                        // either this.increaseQty.bind(this)} or bind in constructor\n                        src=\"\" onClick={()=>this.props.onIncreaseQuantity(this.props.product)}></img>\n\n                        <img alt =\"decrease\" \n                        className=\"action-icons\" \n                        src=\"\" onClick={()=>this.props.onDecreaseQuantity(this.props.product)}></img>\n                        \n                        <img alt =\"delete\" \n                        className=\"action-icons\" \n                        src=\"\"  onClick={()=>this.props.onDeleteProduct(this.props.product.id)}></img>\n                    </div>\n               </div>\n           </div>\n       )\n   }\n}\nconst styles = {\n    image : {\n        height : 110,\n        width : 110,\n        borderRadius : 4,\n        backgroundColor : '#ccc'\n    }\n}\n\nexport default CartItem;","/home/sushanth/Desktop/cart/src/Cart.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":1,"column":8,"nodeType":"35","messageId":"36","endLine":1,"endColumn":16},{"ruleId":"37","severity":1,"message":"38","line":16,"column":21,"nodeType":"39","endLine":16,"endColumn":49},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'CartItem' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]